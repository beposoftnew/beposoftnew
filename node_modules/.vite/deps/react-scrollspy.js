import {
  require_interopRequireDefault
} from "./chunk-ABZ7M45P.js";
import {
  require_classnames
} from "./chunk-CCL26HJW.js";
import {
  require_prop_types
} from "./chunk-MRVVLVEZ.js";
import "./chunk-T5TDCSU7.js";
import {
  require_react
} from "./chunk-I773Y2XN.js";
import {
  __commonJS
} from "./chunk-LK32TJAX.js";

// node_modules/@babel/runtime/helpers/extends.js
var require_extends = __commonJS({
  "node_modules/@babel/runtime/helpers/extends.js"(exports, module) {
    function _extends() {
      module.exports = _extends = Object.assign ? Object.assign.bind() : function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      }, module.exports.__esModule = true, module.exports["default"] = module.exports;
      return _extends.apply(this, arguments);
    }
    module.exports = _extends, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@babel/runtime/helpers/typeof.js
var require_typeof = __commonJS({
  "node_modules/@babel/runtime/helpers/typeof.js"(exports, module) {
    function _typeof(o) {
      "@babel/helpers - typeof";
      return module.exports = _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
        return typeof o2;
      } : function(o2) {
        return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
      }, module.exports.__esModule = true, module.exports["default"] = module.exports, _typeof(o);
    }
    module.exports = _typeof, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@babel/runtime/helpers/toPrimitive.js
var require_toPrimitive = __commonJS({
  "node_modules/@babel/runtime/helpers/toPrimitive.js"(exports, module) {
    var _typeof = require_typeof()["default"];
    function _toPrimitive(input, hint) {
      if (_typeof(input) !== "object" || input === null) return input;
      var prim = input[Symbol.toPrimitive];
      if (prim !== void 0) {
        var res = prim.call(input, hint || "default");
        if (_typeof(res) !== "object") return res;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return (hint === "string" ? String : Number)(input);
    }
    module.exports = _toPrimitive, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@babel/runtime/helpers/toPropertyKey.js
var require_toPropertyKey = __commonJS({
  "node_modules/@babel/runtime/helpers/toPropertyKey.js"(exports, module) {
    var _typeof = require_typeof()["default"];
    var toPrimitive = require_toPrimitive();
    function _toPropertyKey(arg) {
      var key = toPrimitive(arg, "string");
      return _typeof(key) === "symbol" ? key : String(key);
    }
    module.exports = _toPropertyKey, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@babel/runtime/helpers/defineProperty.js
var require_defineProperty = __commonJS({
  "node_modules/@babel/runtime/helpers/defineProperty.js"(exports, module) {
    var toPropertyKey = require_toPropertyKey();
    function _defineProperty(obj, key, value) {
      key = toPropertyKey(key);
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    module.exports = _defineProperty, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@babel/runtime/helpers/arrayLikeToArray.js
var require_arrayLikeToArray = __commonJS({
  "node_modules/@babel/runtime/helpers/arrayLikeToArray.js"(exports, module) {
    function _arrayLikeToArray(arr, len) {
      if (len == null || len > arr.length) len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
      return arr2;
    }
    module.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@babel/runtime/helpers/arrayWithoutHoles.js
var require_arrayWithoutHoles = __commonJS({
  "node_modules/@babel/runtime/helpers/arrayWithoutHoles.js"(exports, module) {
    var arrayLikeToArray = require_arrayLikeToArray();
    function _arrayWithoutHoles(arr) {
      if (Array.isArray(arr)) return arrayLikeToArray(arr);
    }
    module.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@babel/runtime/helpers/iterableToArray.js
var require_iterableToArray = __commonJS({
  "node_modules/@babel/runtime/helpers/iterableToArray.js"(exports, module) {
    function _iterableToArray(iter) {
      if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
    }
    module.exports = _iterableToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js
var require_unsupportedIterableToArray = __commonJS({
  "node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js"(exports, module) {
    var arrayLikeToArray = require_arrayLikeToArray();
    function _unsupportedIterableToArray(o, minLen) {
      if (!o) return;
      if (typeof o === "string") return arrayLikeToArray(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor) n = o.constructor.name;
      if (n === "Map" || n === "Set") return Array.from(o);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);
    }
    module.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@babel/runtime/helpers/nonIterableSpread.js
var require_nonIterableSpread = __commonJS({
  "node_modules/@babel/runtime/helpers/nonIterableSpread.js"(exports, module) {
    function _nonIterableSpread() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    module.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@babel/runtime/helpers/toConsumableArray.js
var require_toConsumableArray = __commonJS({
  "node_modules/@babel/runtime/helpers/toConsumableArray.js"(exports, module) {
    var arrayWithoutHoles = require_arrayWithoutHoles();
    var iterableToArray = require_iterableToArray();
    var unsupportedIterableToArray = require_unsupportedIterableToArray();
    var nonIterableSpread = require_nonIterableSpread();
    function _toConsumableArray(arr) {
      return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();
    }
    module.exports = _toConsumableArray, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@babel/runtime/helpers/classCallCheck.js
var require_classCallCheck = __commonJS({
  "node_modules/@babel/runtime/helpers/classCallCheck.js"(exports, module) {
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    module.exports = _classCallCheck, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@babel/runtime/helpers/assertThisInitialized.js
var require_assertThisInitialized = __commonJS({
  "node_modules/@babel/runtime/helpers/assertThisInitialized.js"(exports, module) {
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    module.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@babel/runtime/helpers/possibleConstructorReturn.js
var require_possibleConstructorReturn = __commonJS({
  "node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"(exports, module) {
    var _typeof = require_typeof()["default"];
    var assertThisInitialized = require_assertThisInitialized();
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      } else if (call !== void 0) {
        throw new TypeError("Derived constructors may only return object or undefined");
      }
      return assertThisInitialized(self);
    }
    module.exports = _possibleConstructorReturn, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@babel/runtime/helpers/getPrototypeOf.js
var require_getPrototypeOf = __commonJS({
  "node_modules/@babel/runtime/helpers/getPrototypeOf.js"(exports, module) {
    function _getPrototypeOf(o) {
      module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      }, module.exports.__esModule = true, module.exports["default"] = module.exports;
      return _getPrototypeOf(o);
    }
    module.exports = _getPrototypeOf, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@babel/runtime/helpers/createClass.js
var require_createClass = __commonJS({
  "node_modules/@babel/runtime/helpers/createClass.js"(exports, module) {
    var toPropertyKey = require_toPropertyKey();
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps) _defineProperties(Constructor.prototype, protoProps);
      if (staticProps) _defineProperties(Constructor, staticProps);
      Object.defineProperty(Constructor, "prototype", {
        writable: false
      });
      return Constructor;
    }
    module.exports = _createClass, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@babel/runtime/helpers/setPrototypeOf.js
var require_setPrototypeOf = __commonJS({
  "node_modules/@babel/runtime/helpers/setPrototypeOf.js"(exports, module) {
    function _setPrototypeOf(o, p) {
      module.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      }, module.exports.__esModule = true, module.exports["default"] = module.exports;
      return _setPrototypeOf(o, p);
    }
    module.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@babel/runtime/helpers/inherits.js
var require_inherits = __commonJS({
  "node_modules/@babel/runtime/helpers/inherits.js"(exports, module) {
    var setPrototypeOf = require_setPrototypeOf();
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      Object.defineProperty(subClass, "prototype", {
        writable: false
      });
      if (superClass) setPrototypeOf(subClass, superClass);
    }
    module.exports = _inherits, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/react-scrollspy/lib/throttle.js
var require_throttle = __commonJS({
  "node_modules/react-scrollspy/lib/throttle.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var throttle = function throttle2(fn) {
      var threshold = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 100;
      var last;
      var timer;
      return function() {
        var now = +/* @__PURE__ */ new Date();
        var timePassed = !!last && now < last + threshold;
        if (timePassed) {
          clearTimeout(timer);
          timer = setTimeout(function() {
            last = now;
            fn();
          }, threshold);
        } else {
          last = now;
          fn();
        }
      };
    };
    var _default = throttle;
    exports.default = _default;
  }
});

// node_modules/react-scrollspy/lib/scrollspy.js
var require_scrollspy = __commonJS({
  "node_modules/react-scrollspy/lib/scrollspy.js"(exports) {
    var _interopRequireDefault = require_interopRequireDefault();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _extends2 = _interopRequireDefault(require_extends());
    var _defineProperty2 = _interopRequireDefault(require_defineProperty());
    var _toConsumableArray2 = _interopRequireDefault(require_toConsumableArray());
    var _classCallCheck2 = _interopRequireDefault(require_classCallCheck());
    var _possibleConstructorReturn2 = _interopRequireDefault(require_possibleConstructorReturn());
    var _getPrototypeOf2 = _interopRequireDefault(require_getPrototypeOf());
    var _assertThisInitialized2 = _interopRequireDefault(require_assertThisInitialized());
    var _createClass2 = _interopRequireDefault(require_createClass());
    var _inherits2 = _interopRequireDefault(require_inherits());
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _react = _interopRequireDefault(require_react());
    var _classnames = _interopRequireDefault(require_classnames());
    var _throttle = _interopRequireDefault(require_throttle());
    function isEqualArray(a, b) {
      return a.length === b.length && a.every(function(item, index) {
        return item === b[index];
      });
    }
    var Scrollspy = function(_React$Component) {
      (0, _inherits2.default)(Scrollspy2, _React$Component);
      (0, _createClass2.default)(Scrollspy2, null, [{
        key: "propTypes",
        get: function get() {
          return {
            items: _propTypes.default.arrayOf(_propTypes.default.string).isRequired,
            currentClassName: _propTypes.default.string.isRequired,
            scrolledPastClassName: _propTypes.default.string,
            style: _propTypes.default.object,
            componentTag: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.elementType]),
            offset: _propTypes.default.number,
            rootEl: _propTypes.default.string,
            onUpdate: _propTypes.default.func
          };
        }
      }, {
        key: "defaultProps",
        get: function get() {
          return {
            items: [],
            currentClassName: "",
            style: {},
            componentTag: "ul",
            offset: 0,
            onUpdate: function onUpdate() {
            }
          };
        }
      }]);
      function Scrollspy2(props) {
        var _this;
        (0, _classCallCheck2.default)(this, Scrollspy2);
        _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Scrollspy2).call(this, props));
        _this.state = {
          targetItems: [],
          inViewState: [],
          isScrolledPast: []
          // manually bind as ES6 does not apply this
          // auto binding as React.createClass does
        };
        _this._handleSpy = _this._handleSpy.bind((0, _assertThisInitialized2.default)(_this));
        return _this;
      }
      (0, _createClass2.default)(Scrollspy2, [{
        key: "_initSpyTarget",
        value: function _initSpyTarget(items) {
          var targetItems = items.map(function(item) {
            return document.getElementById(item);
          });
          return targetItems;
        }
        // https://github.com/makotot/react-scrollspy/pull/45
      }, {
        key: "_fillArray",
        value: function _fillArray(array, val) {
          var newArray = [];
          for (var i = 0, max = array.length; i < max; i++) {
            newArray[i] = val;
          }
          return newArray;
        }
      }, {
        key: "_isScrolled",
        value: function _isScrolled() {
          return this._getScrollDimension().scrollTop > 0;
        }
      }, {
        key: "_getScrollDimension",
        value: function _getScrollDimension() {
          var doc = document;
          var rootEl = this.props.rootEl;
          var scrollTop = rootEl ? doc.querySelector(rootEl).scrollTop : doc.documentElement.scrollTop || doc.body.parentNode.scrollTop || doc.body.scrollTop;
          var scrollHeight = rootEl ? doc.querySelector(rootEl).scrollHeight : doc.documentElement.scrollHeight || doc.body.parentNode.scrollHeight || doc.body.scrollHeight;
          return {
            scrollTop,
            scrollHeight
          };
        }
      }, {
        key: "_getElemsViewState",
        value: function _getElemsViewState(targets) {
          var elemsInView = [];
          var elemsOutView = [];
          var viewStatusList = [];
          var targetItems = targets ? targets : this.state.targetItems;
          var hasInViewAlready = false;
          for (var i = 0, max = targetItems.length; i < max; i++) {
            var currentContent = targetItems[i];
            var isInView = hasInViewAlready ? false : this._isInView(currentContent);
            if (isInView) {
              hasInViewAlready = true;
              elemsInView.push(currentContent);
            } else {
              elemsOutView.push(currentContent);
            }
            var isLastItem = i === max - 1;
            var isScrolled = this._isScrolled();
            var isLastShortItemAtBottom = this._isAtBottom() && this._isInView(currentContent) && !isInView && isLastItem && isScrolled;
            if (isLastShortItemAtBottom) {
              elemsOutView.pop();
              elemsOutView.push.apply(elemsOutView, (0, _toConsumableArray2.default)(elemsInView));
              elemsInView = [currentContent];
              viewStatusList = this._fillArray(viewStatusList, false);
              isInView = true;
            }
            viewStatusList.push(isInView);
          }
          return {
            inView: elemsInView,
            outView: elemsOutView,
            viewStatusList,
            scrolledPast: this.props.scrolledPastClassName && this._getScrolledPast(viewStatusList)
          };
        }
      }, {
        key: "_isInView",
        value: function _isInView(el) {
          if (!el) {
            return false;
          }
          var _this$props = this.props, rootEl = _this$props.rootEl, offset = _this$props.offset;
          var rootRect;
          if (rootEl) {
            rootRect = document.querySelector(rootEl).getBoundingClientRect();
          }
          var rect = el.getBoundingClientRect();
          var winH = rootEl ? rootRect.height : window.innerHeight;
          var _this$_getScrollDimen = this._getScrollDimension(), scrollTop = _this$_getScrollDimen.scrollTop;
          var scrollBottom = scrollTop + winH;
          var elTop = rootEl ? rect.top + scrollTop - rootRect.top + offset : rect.top + scrollTop + offset;
          var elBottom = elTop + el.offsetHeight;
          return elTop < scrollBottom && elBottom > scrollTop;
        }
      }, {
        key: "_isAtBottom",
        value: function _isAtBottom() {
          var rootEl = this.props.rootEl;
          var _this$_getScrollDimen2 = this._getScrollDimension(), scrollTop = _this$_getScrollDimen2.scrollTop, scrollHeight = _this$_getScrollDimen2.scrollHeight;
          var winH = rootEl ? document.querySelector(rootEl).getBoundingClientRect().height : window.innerHeight;
          var scrolledToBottom = scrollTop + winH >= scrollHeight;
          return scrolledToBottom;
        }
      }, {
        key: "_getScrolledPast",
        value: function _getScrolledPast(viewStatusList) {
          if (!viewStatusList.some(function(item) {
            return item;
          })) {
            return viewStatusList;
          }
          var hasFoundInView = false;
          var scrolledPastItems = viewStatusList.map(function(item) {
            if (item && !hasFoundInView) {
              hasFoundInView = true;
              return false;
            }
            return !hasFoundInView;
          });
          return scrolledPastItems;
        }
      }, {
        key: "_spy",
        value: function _spy(targets) {
          var _this2 = this;
          var elemensViewState = this._getElemsViewState(targets);
          var currentStatuses = this.state.inViewState;
          this.setState({
            inViewState: elemensViewState.viewStatusList,
            isScrolledPast: elemensViewState.scrolledPast
          }, function() {
            _this2._update(currentStatuses);
          });
        }
      }, {
        key: "_update",
        value: function _update(prevStatuses) {
          if (isEqualArray(this.state.inViewState, prevStatuses)) {
            return;
          }
          this.props.onUpdate(this.state.targetItems[this.state.inViewState.indexOf(true)]);
        }
      }, {
        key: "_handleSpy",
        value: function _handleSpy() {
          (0, _throttle.default)(this._spy(), 100);
        }
      }, {
        key: "_initFromProps",
        value: function _initFromProps() {
          var targetItems = this._initSpyTarget(this.props.items);
          this.setState({
            targetItems
          });
          this._spy(targetItems);
        }
      }, {
        key: "offEvent",
        value: function offEvent() {
          var el = this.props.rootEl ? document.querySelector(this.props.rootEl) : window;
          el.removeEventListener("scroll", this._handleSpy);
        }
      }, {
        key: "onEvent",
        value: function onEvent() {
          var el = this.props.rootEl ? document.querySelector(this.props.rootEl) : window;
          el.addEventListener("scroll", this._handleSpy);
        }
      }, {
        key: "componentDidMount",
        value: function componentDidMount() {
          this._initFromProps();
          this.onEvent();
        }
      }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
          this.offEvent();
        }
      }, {
        key: "UNSAFE_componentWillReceiveProps",
        value: function UNSAFE_componentWillReceiveProps() {
          this._initFromProps();
        }
      }, {
        key: "render",
        value: function render() {
          var _this3 = this;
          var Tag = this.props.componentTag;
          var _this$props2 = this.props, children = _this$props2.children, className = _this$props2.className, scrolledPastClassName = _this$props2.scrolledPastClassName, style = _this$props2.style;
          var counter = 0;
          var items = _react.default.Children.map(children, function(child, idx) {
            var _classNames;
            if (!child) {
              return null;
            }
            var ChildTag = child.type;
            var isScrolledPast = scrolledPastClassName && _this3.state.isScrolledPast[idx];
            var childClass = (0, _classnames.default)((_classNames = {}, (0, _defineProperty2.default)(_classNames, "".concat(child.props.className), child.props.className), (0, _defineProperty2.default)(_classNames, "".concat(_this3.props.currentClassName), _this3.state.inViewState[idx]), (0, _defineProperty2.default)(_classNames, "".concat(_this3.props.scrolledPastClassName), isScrolledPast), _classNames));
            return _react.default.createElement(ChildTag, (0, _extends2.default)({}, child.props, {
              className: childClass,
              key: counter++
            }), child.props.children);
          });
          var itemClass = (0, _classnames.default)((0, _defineProperty2.default)({}, "".concat(className), className));
          return _react.default.createElement(Tag, {
            className: itemClass,
            style
          }, items);
        }
      }]);
      return Scrollspy2;
    }(_react.default.Component);
    exports.default = Scrollspy;
  }
});
export default require_scrollspy();
//# sourceMappingURL=react-scrollspy.js.map
