{
  "version": 3,
  "sources": ["../../@ckeditor/ckeditor5-react/dist/webpack:/CKEditor/webpack/universalModuleDefinition", "../../@ckeditor/ckeditor5-react/dist/webpack:/CKEditor/external umd \"@ckeditor/ckeditor5-watchdog\"", "../../@ckeditor/ckeditor5-react/dist/webpack:/CKEditor/external umd \"prop-types\"", "../../@ckeditor/ckeditor5-react/dist/webpack:/CKEditor/external umd \"react\"", "../../@ckeditor/ckeditor5-react/dist/webpack:/CKEditor/webpack/bootstrap", "../../@ckeditor/ckeditor5-react/dist/webpack:/CKEditor/webpack/runtime/compat get default export", "../../@ckeditor/ckeditor5-react/dist/webpack:/CKEditor/webpack/runtime/define property getters", "../../@ckeditor/ckeditor5-react/dist/webpack:/CKEditor/webpack/runtime/hasOwnProperty shorthand", "../../@ckeditor/ckeditor5-react/dist/webpack:/CKEditor/webpack/runtime/make namespace object", "../../@ckeditor/ckeditor5-react/dist/webpack:/CKEditor/node_modules/@ckeditor/ckeditor5-utils/src/uid.js", "../../@ckeditor/ckeditor5-react/dist/webpack:/CKEditor/src/ckeditorcontext.tsx", "../../@ckeditor/ckeditor5-react/dist/webpack:/CKEditor/src/ckeditor.tsx", "../../@ckeditor/ckeditor5-react/dist/webpack:/CKEditor/src/useMultiRootEditor.tsx"],
  "sourcesContent": ["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"), require(\"prop-types\"), require(\"@ckeditor/ckeditor5-watchdog\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\", \"prop-types\", \"@ckeditor/ckeditor5-watchdog\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"CKEditor\"] = factory(require(\"react\"), require(\"prop-types\"), require(\"@ckeditor/ckeditor5-watchdog\"));\n\telse\n\t\troot[\"CKEditor\"] = factory(root[\"react\"], root[\"prop-types\"], root[\"@ckeditor/ckeditor5-watchdog\"]);\n})(self, (__WEBPACK_EXTERNAL_MODULE__155__, __WEBPACK_EXTERNAL_MODULE__949__, __WEBPACK_EXTERNAL_MODULE__546__) => {\nreturn ", "module.exports = __WEBPACK_EXTERNAL_MODULE__546__;", "module.exports = __WEBPACK_EXTERNAL_MODULE__949__;", "module.exports = __WEBPACK_EXTERNAL_MODULE__155__;", "// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n", "// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};", "// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};", "__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))", "// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};", "/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module utils/uid\n */\n/**\n * A hash table of hex numbers to avoid using toString() in uid() which is costly.\n * [ '00', '01', '02', ..., 'fe', 'ff' ]\n */\nconst HEX_NUMBERS = new Array(256).fill('')\n    .map((_, index) => ('0' + (index).toString(16)).slice(-2));\n/**\n * Returns a unique id. The id starts with an \"e\" character and a randomly generated string of\n * 32 alphanumeric characters.\n *\n * **Note**: The characters the unique id is built from correspond to the hex number notation\n * (from \"0\" to \"9\", from \"a\" to \"f\"). In other words, each id corresponds to an \"e\" followed\n * by 16 8-bit numbers next to each other.\n *\n * @returns An unique id string.\n */\nexport default function uid() {\n    // Let's create some positive random 32bit integers first.\n    //\n    // 1. Math.random() is a float between 0 and 1.\n    // 2. 0x100000000 is 2^32 = 4294967296.\n    // 3. >>> 0 enforces integer (in JS all numbers are floating point).\n    //\n    // For instance:\n    //\t\tMath.random() * 0x100000000 = 3366450031.853859\n    // but\n    //\t\tMath.random() * 0x100000000 >>> 0 = 3366450031.\n    const r1 = Math.random() * 0x100000000 >>> 0;\n    const r2 = Math.random() * 0x100000000 >>> 0;\n    const r3 = Math.random() * 0x100000000 >>> 0;\n    const r4 = Math.random() * 0x100000000 >>> 0;\n    // Make sure that id does not start with number.\n    return 'e' +\n        HEX_NUMBERS[r1 >> 0 & 0xFF] +\n        HEX_NUMBERS[r1 >> 8 & 0xFF] +\n        HEX_NUMBERS[r1 >> 16 & 0xFF] +\n        HEX_NUMBERS[r1 >> 24 & 0xFF] +\n        HEX_NUMBERS[r2 >> 0 & 0xFF] +\n        HEX_NUMBERS[r2 >> 8 & 0xFF] +\n        HEX_NUMBERS[r2 >> 16 & 0xFF] +\n        HEX_NUMBERS[r2 >> 24 & 0xFF] +\n        HEX_NUMBERS[r3 >> 0 & 0xFF] +\n        HEX_NUMBERS[r3 >> 8 & 0xFF] +\n        HEX_NUMBERS[r3 >> 16 & 0xFF] +\n        HEX_NUMBERS[r3 >> 24 & 0xFF] +\n        HEX_NUMBERS[r4 >> 0 & 0xFF] +\n        HEX_NUMBERS[r4 >> 8 & 0xFF] +\n        HEX_NUMBERS[r4 >> 16 & 0xFF] +\n        HEX_NUMBERS[r4 >> 24 & 0xFF];\n}\n", "/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\nimport React, { type ReactNode } from 'react';\nimport PropTypes, { type InferProps, type Validator } from 'prop-types';\n\nimport { ContextWatchdog } from '@ckeditor/ckeditor5-watchdog';\nimport type { WatchdogConfig } from '@ckeditor/ckeditor5-watchdog/src/watchdog';\n\nimport type { Context, ContextConfig } from '@ckeditor/ckeditor5-core';\n\nexport const ContextWatchdogContext = React.createContext<ContextWatchdog | 'contextWatchdog' | null>( 'contextWatchdog' );\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport default class CKEditorContext<TContext extends Context = Context> extends React.Component<Props<TContext>, {}> {\n\tpublic contextWatchdog: ContextWatchdog<TContext> | null = null;\n\n\tconstructor( props: Props<TContext>, context: any ) {\n\t\tsuper( props, context );\n\n\t\tif ( this.props.isLayoutReady ) {\n\t\t\tthis._initializeContextWatchdog( this.props.config );\n\t\t}\n\t}\n\n\tpublic override shouldComponentUpdate( nextProps: Readonly<Props<TContext> & { children?: ReactNode | undefined }> ): boolean {\n\t\treturn this._shouldComponentUpdate( nextProps ) as unknown as boolean;\n\t}\n\n\t/**\n\t * Wrapper for the async handler. Note that this is an implementation bug, see https://github.com/ckeditor/ckeditor5-react/issues/312.\n\t */\n\tprivate async _shouldComponentUpdate( nextProps: Readonly<Props<TContext> & { children?: ReactNode | undefined }> ): Promise<boolean> {\n\t\t// If the configuration changes then the ContextWatchdog needs to be destroyed and recreated\n\t\t// On top of the new configuration.\n\t\tif ( nextProps.id !== this.props.id ) {\n\t\t\t/* istanbul ignore else */\n\t\t\tif ( this.contextWatchdog ) {\n\t\t\t\tawait this.contextWatchdog.destroy();\n\t\t\t}\n\n\t\t\tawait this._initializeContextWatchdog( nextProps.config );\n\t\t}\n\n\t\tif ( nextProps.isLayoutReady && !this.contextWatchdog ) {\n\t\t\tawait this._initializeContextWatchdog( nextProps.config );\n\n\t\t\treturn true;\n\t\t}\n\n\t\t// Rerender the component only when children has changed.\n\t\treturn this.props.children !== nextProps.children;\n\t}\n\n\tpublic override render(): ReactNode {\n\t\treturn (\n\t\t\t<ContextWatchdogContext.Provider value={ this.contextWatchdog }>\n\t\t\t\t{ this.props.children }\n\t\t\t</ContextWatchdogContext.Provider>\n\t\t);\n\t}\n\n\tpublic override componentWillUnmount(): void {\n\t\tthis._destroyContext();\n\t}\n\n\tprivate async _initializeContextWatchdog( config?: ContextConfig ): Promise<void> {\n\t\tthis.contextWatchdog = new ContextWatchdog( this.props.context!, this.props.watchdogConfig );\n\n\t\tthis.contextWatchdog.on( 'error', ( _, errorEvent ) => {\n\t\t\tthis.props.onError( errorEvent.error, {\n\t\t\t\tphase: 'runtime',\n\t\t\t\twillContextRestart: errorEvent.causesRestart\n\t\t\t} );\n\t\t} );\n\n\t\tthis.contextWatchdog.on( 'stateChange', () => {\n\t\t\tif ( this.contextWatchdog!.state === 'ready' && this.props.onReady ) {\n\t\t\t\tthis.props.onReady( this.contextWatchdog!.context! );\n\t\t\t}\n\t\t} );\n\n\t\tawait this.contextWatchdog.create( config )\n\t\t\t.catch( error => {\n\t\t\t\tthis.props.onError( error, {\n\t\t\t\t\tphase: 'initialization',\n\t\t\t\t\twillContextRestart: false\n\t\t\t\t} );\n\t\t\t} );\n\t}\n\n\tprivate async _destroyContext(): Promise<void> {\n\t\tif ( this.contextWatchdog ) {\n\t\t\tawait this.contextWatchdog.destroy();\n\t\t\tthis.contextWatchdog = null;\n\t\t}\n\t}\n\n\tpublic static defaultProps: Partial<Props<Context>> = {\n\t\tisLayoutReady: true,\n\t\tonError: ( error, details ) => console.error( error, details )\n\t};\n\n\tpublic static propTypes = {\n\t\tid: PropTypes.string,\n\t\tisLayoutReady: PropTypes.bool,\n\t\tcontext: PropTypes.func as unknown as Validator<{ create( ...args: any ): Promise<any> } | undefined>,\n\t\twatchdogConfig: PropTypes.object,\n\t\tconfig: PropTypes.object,\n\t\tonReady: PropTypes.func,\n\t\tonError: PropTypes.func\n\t};\n}\n\ninterface Props<TContext extends Context> extends InferProps<typeof CKEditorContext.propTypes> {\n\tcontext?: { create( ...args: any ): Promise<TContext> };\n\twatchdogConfig?: WatchdogConfig;\n\tconfig?: ContextConfig;\n\tonReady?: ( context: Context ) => void; // TODO this should accept TContext (after ContextWatchdog release).\n\tonError: ( error: Error, details: ErrorDetails ) => void;\n\tchildren?: ReactNode;\n}\n\ninterface ErrorDetails {\n\tphase: 'initialization' | 'runtime';\n\twillContextRestart: boolean;\n}\n", "/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/* globals window */\n\nimport React from 'react';\nimport PropTypes, { type InferProps, type Validator } from 'prop-types';\n\nimport uid from '@ckeditor/ckeditor5-utils/src/uid';\n\nimport type { EventInfo } from '@ckeditor/ckeditor5-utils';\nimport type { Editor, EditorConfig } from '@ckeditor/ckeditor5-core';\nimport type { DocumentChangeEvent } from '@ckeditor/ckeditor5-engine';\n\nimport { EditorWatchdog, ContextWatchdog } from '@ckeditor/ckeditor5-watchdog';\nimport type { WatchdogConfig } from '@ckeditor/ckeditor5-watchdog/src/watchdog';\nimport type { EditorCreatorFunction } from '@ckeditor/ckeditor5-watchdog/src/editorwatchdog';\n\nimport { ContextWatchdogContext } from './ckeditorcontext';\n\nconst REACT_INTEGRATION_READ_ONLY_LOCK_ID = 'Lock from React integration (@ckeditor/ckeditor5-react)';\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport default class CKEditor<TEditor extends Editor> extends React.Component<Props<TEditor>, {}> {\n\t/**\n\t * Contains a promise that resolves when the editor destruction is finished.\n\t */\n\tprivate editorDestructionInProgress: Promise<void> | null = null;\n\n\t/**\n\t * After mounting the editor, the variable will contain a reference to the created editor.\n\t * @see: https://ckeditor.com/docs/ckeditor5/latest/api/module_core_editor_editor-Editor.html\n\t */\n\tprivate domContainer = React.createRef<HTMLDivElement>();\n\n\t/**\n\t * An instance of EditorWatchdog or an instance of EditorWatchdog-like adapter for ContextWatchdog.\n\t * It holds the instance of the editor under `this.watchdog.editor` if `props.disableWatchdog` is set to false.\n\t */\n\tprivate watchdog: EditorWatchdog<TEditor> | EditorWatchdogAdapter<TEditor> | null = null;\n\n\t/**\n\t * Holds the instance of the editor if `props.disableWatchdog` is set to true.\n\t */\n\tprivate instance: Editor | undefined | null;\n\n\tconstructor( props: Props<TEditor> ) {\n\t\tsuper( props );\n\n\t\tconst { CKEDITOR_VERSION } = window;\n\n\t\tif ( CKEDITOR_VERSION ) {\n\t\t\tconst [ major ] = CKEDITOR_VERSION.split( '.' ).map( Number );\n\n\t\t\tif ( major < 37 ) {\n\t\t\t\tconsole.warn( 'The <CKEditor> component requires using CKEditor 5 in version 37 or higher.' );\n\t\t\t}\n\t\t} else {\n\t\t\tconsole.warn( 'Cannot find the \"CKEDITOR_VERSION\" in the \"window\" scope.' );\n\t\t}\n\t}\n\n\t/**\n\t * An editor instance.\n\t */\n\tpublic get editor(): Editor | null {\n\t\tif ( this.props.disableWatchdog ) {\n\t\t\treturn this.instance!;\n\t\t}\n\n\t\tif ( !this.watchdog ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this.watchdog.editor;\n\t}\n\n\t/**\n\t * The CKEditor component should not be updated by React itself.\n\t * However, if the component identifier changes, the whole structure should be created once again.\n\t */\n\tpublic override shouldComponentUpdate( nextProps: Readonly<Props<TEditor>> ): boolean {\n\t\tif ( !this.editor ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Only when the component identifier changes the whole structure should be re-created once again.\n\t\tif ( nextProps.id !== this.props.id ) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif ( nextProps.disableWatchdog !== this.props.disableWatchdog ) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif ( this._shouldUpdateEditor( nextProps ) ) {\n\t\t\tthis.editor.data.set( nextProps.data! );\n\t\t}\n\n\t\tif ( 'disabled' in nextProps ) {\n\t\t\tif ( nextProps.disabled ) {\n\t\t\t\tthis.editor.enableReadOnlyMode( REACT_INTEGRATION_READ_ONLY_LOCK_ID );\n\t\t\t} else {\n\t\t\t\tthis.editor.disableReadOnlyMode( REACT_INTEGRATION_READ_ONLY_LOCK_ID );\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Initialize the editor when the component is mounted.\n\t */\n\tpublic override async componentDidMount(): Promise<void> {\n\t\tawait this._initializeEditor();\n\t}\n\n\t/**\n\t * Re-render the entire component once again. The old editor will be destroyed and the new one will be created.\n\t */\n\tpublic override async componentDidUpdate(): Promise<void> {\n\t\tawait this._destroyEditor();\n\t\tawait this._initializeEditor();\n\t}\n\n\t/**\n\t * Destroy the editor before unmounting the component.\n\t */\n\tpublic override async componentWillUnmount(): Promise<void> {\n\t\tawait this._destroyEditor();\n\t}\n\n\t/**\n\t * Render a <div> element which will be replaced by CKEditor.\n\t */\n\tpublic override render(): React.ReactNode {\n\t\treturn (\n\t\t\t<div ref={ this.domContainer }></div>\n\t\t);\n\t}\n\n\t/**\n\t * Initializes the editor by creating a proper watchdog and initializing it with the editor's configuration.\n\t */\n\tprivate async _initializeEditor(): Promise<unknown> {\n\t\tawait this.editorDestructionInProgress;\n\n\t\tif ( this.props.disableWatchdog ) {\n\t\t\tthis.instance = await this._createEditor( this.domContainer.current!, this._getConfig() );\n\t\t\treturn;\n\t\t}\n\n\t\t/* istanbul ignore next */\n\t\tif ( this.watchdog ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( this.context instanceof ContextWatchdog ) {\n\t\t\tthis.watchdog = new EditorWatchdogAdapter( this.context );\n\t\t} else {\n\t\t\tthis.watchdog = new CKEditor._EditorWatchdog( this.props.editor, this.props.watchdogConfig );\n\t\t}\n\n\t\tthis.watchdog.setCreator( ( el, config ) => this._createEditor( el as any, config ) );\n\n\t\tthis.watchdog.on( 'error', ( _, { error, causesRestart } ) => {\n\t\t\tconst onError = this.props.onError || console.error;\n\t\t\tonError( error, { phase: 'runtime', willEditorRestart: causesRestart } );\n\t\t} );\n\n\t\tawait this.watchdog\n\t\t\t.create( this.domContainer.current!, this._getConfig() )\n\t\t\t.catch( error => {\n\t\t\t\tconst onError = this.props.onError || console.error;\n\t\t\t\tonError( error, { phase: 'initialization', willEditorRestart: false } );\n\t\t\t} );\n\t}\n\n\t/**\n\t * Creates an editor from the element and configuration.\n\t *\n\t * @param element The source element.\n\t * @param config CKEditor 5 editor configuration.\n\t */\n\tprivate _createEditor( element: HTMLElement | string | Record<string, string>, config: EditorConfig ): Promise<TEditor> {\n\t\treturn this.props.editor.create( element as HTMLElement, config )\n\t\t\t.then( editor => {\n\t\t\t\tif ( 'disabled' in this.props ) {\n\t\t\t\t\t// Switch to the read-only mode if the `[disabled]` attribute is specified.\n\t\t\t\t\t/* istanbul ignore else */\n\t\t\t\t\tif ( this.props.disabled ) {\n\t\t\t\t\t\teditor.enableReadOnlyMode( REACT_INTEGRATION_READ_ONLY_LOCK_ID );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst modelDocument = editor.model.document;\n\t\t\t\tconst viewDocument = editor.editing.view.document;\n\n\t\t\t\tmodelDocument.on<DocumentChangeEvent>( 'change:data', event => {\n\t\t\t\t\t/* istanbul ignore else */\n\t\t\t\t\tif ( this.props.onChange ) {\n\t\t\t\t\t\tthis.props.onChange( event, editor );\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\t\tviewDocument.on( 'focus', event => {\n\t\t\t\t\t/* istanbul ignore else */\n\t\t\t\t\tif ( this.props.onFocus ) {\n\t\t\t\t\t\tthis.props.onFocus( event, editor );\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\t\tviewDocument.on( 'blur', event => {\n\t\t\t\t\t/* istanbul ignore else */\n\t\t\t\t\tif ( this.props.onBlur ) {\n\t\t\t\t\t\tthis.props.onBlur( event, editor );\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\t\t// The `onReady` callback should be fired once the `editor` property\n\t\t\t\t// can be reached from the `<CKEditor>` component.\n\t\t\t\t// Ideally this part should be moved to the watchdog item creator listeners.\n\t\t\t\tsetTimeout( () => {\n\t\t\t\t\tif ( this.props.onReady ) {\n\t\t\t\t\t\tthis.props.onReady( editor );\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\t\treturn editor;\n\t\t\t} );\n\t}\n\n\t/**\n\t * Destroys the editor by destroying the watchdog.\n\t */\n\tprivate async _destroyEditor(): Promise<void> {\n\t\tthis.editorDestructionInProgress = new Promise<void>( resolve => {\n\t\t\t// It may happen during the tests that the watchdog instance is not assigned before destroying itself. See: #197.\n\t\t\t//\n\t\t\t// Additionally, we need to find a way to detect if the whole context has been destroyed. As `componentWillUnmount()`\n\t\t\t// could be fired by <CKEditorContext /> and <CKEditor /> at the same time, this `setTimeout()` makes sure\n\t\t\t// that <CKEditorContext /> component will be destroyed first, so during the code execution\n\t\t\t// the `ContextWatchdog#state` would have a correct value. See `EditorWatchdogAdapter#destroy()` for more information.\n\t\t\t/* istanbul ignore next */\n\t\t\tsetTimeout( async () => {\n\t\t\t\tif ( this.watchdog ) {\n\t\t\t\t\tawait this.watchdog.destroy();\n\t\t\t\t\tthis.watchdog = null;\n\t\t\t\t\treturn resolve();\n\t\t\t\t}\n\n\t\t\t\tif ( this.instance ) {\n\t\t\t\t\tawait this.instance.destroy();\n\t\t\t\t\tthis.instance = null;\n\t\t\t\t\treturn resolve();\n\t\t\t\t}\n\n\t\t\t\tresolve();\n\t\t\t} );\n\t\t} );\n\t}\n\n\t/**\n\t * Returns true when the editor should be updated.\n\t *\n\t * @param nextProps React's properties.\n\t */\n\tprivate _shouldUpdateEditor( nextProps: Readonly<Props<TEditor>> ): boolean {\n\t\t// Check whether `nextProps.data` is equal to `this.props.data` is required if somebody defined the `#data`\n\t\t// property as a static string and updated a state of component when the editor's content has been changed.\n\t\t// If we avoid checking those properties, the editor's content will back to the initial value because\n\t\t// the state has been changed and React will call this method.\n\t\tif ( this.props.data === nextProps.data ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// We should not change data if the editor's content is equal to the `#data` property.\n\t\tif ( this.editor!.data.get() === nextProps.data ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Returns the editor configuration.\n\t */\n\tprivate _getConfig(): EditorConfig {\n\t\tconst config = this.props.config || {};\n\n\t\tif ( this.props.data && config.initialData ) {\n\t\t\tconsole.warn(\n\t\t\t\t'Editor data should be provided either using `config.initialData` or `content` property. ' +\n\t\t\t\t'The config value takes precedence over `content` property and will be used when both are specified.'\n\t\t\t);\n\t\t}\n\n\t\t// Merge two possible ways of providing data into the `config.initialData` field.\n\t\treturn {\n\t\t\t...config,\n\t\t\tinitialData: config.initialData || this.props.data || ''\n\t\t};\n\t}\n\n\tpublic static override contextType = ContextWatchdogContext;\n\n\t// Properties definition.\n\tpublic static propTypes = {\n\t\teditor: PropTypes.func.isRequired as unknown as Validator<{ create( ...args: any ): Promise<any> }>,\n\t\tdata: PropTypes.string,\n\t\tconfig: PropTypes.object,\n\t\tdisableWatchdog: PropTypes.bool,\n\t\twatchdogConfig: PropTypes.object,\n\t\tonChange: PropTypes.func,\n\t\tonReady: PropTypes.func,\n\t\tonFocus: PropTypes.func,\n\t\tonBlur: PropTypes.func,\n\t\tonError: PropTypes.func,\n\t\tdisabled: PropTypes.bool,\n\t\tid: PropTypes.any\n\t};\n\n\t// Store the API in the static property to easily overwrite it in tests.\n\t// Too bad dependency injection does not work in Webpack + ES 6 (const) + Babel.\n\tpublic static _EditorWatchdog = EditorWatchdog;\n}\n\n/**\n * TODO this is type space definition for props, the CKEditor.propTypes is a run-time props validation that should match.\n */\ninterface Props<TEditor extends Editor> extends InferProps<typeof CKEditor.propTypes> {\n\teditor: { create( ...args: any ): Promise<TEditor> };\n\tconfig?: EditorConfig;\n\twatchdogConfig?: WatchdogConfig;\n\tdisableWatchdog?: boolean;\n\tonReady?: ( editor: TEditor ) => void;\n\tonError?: ( error: Error, details: ErrorDetails ) => void;\n\tonChange?: ( event: EventInfo, editor: TEditor ) => void;\n\tonFocus?: ( event: EventInfo, editor: TEditor ) => void;\n\tonBlur?: ( event: EventInfo, editor: TEditor ) => void;\n}\n\ninterface ErrorDetails {\n\tphase: 'initialization' | 'runtime';\n\twillEditorRestart?: boolean;\n}\n\n/**\n * An adapter aligning the context watchdog API to the editor watchdog API for easier usage.\n */\nexport class EditorWatchdogAdapter<TEditor extends Editor> {\n\t/**\n\t * The context watchdog instance that will be wrapped into editor watchdog API.\n\t */\n\tprivate readonly _contextWatchdog: ContextWatchdog;\n\n\t/**\n\t * A unique id for the adapter to distinguish editor items when using the context watchdog API.\n\t */\n\tprivate readonly _id: string;\n\n\t/**\n\t * A watchdog's editor creator function.\n\t */\n\tprivate _creator?: EditorCreatorFunction;\n\n\t/**\n\t * @param contextWatchdog The context watchdog instance that will be wrapped into editor watchdog API.\n\t */\n\tconstructor( contextWatchdog: ContextWatchdog ) {\n\t\tthis._contextWatchdog = contextWatchdog;\n\t\tthis._id = uid();\n\t}\n\n\t/**\n\t *  @param creator A watchdog's editor creator function.\n\t */\n\tpublic setCreator( creator: EditorCreatorFunction ): void {\n\t\tthis._creator = creator;\n\t}\n\n\t/**\n\t * Adds an editor configuration to the context watchdog registry. Creates an instance of it.\n\t *\n\t * @param sourceElementOrData A source element or data for the new editor.\n\t * @param config CKEditor 5 editor config.\n\t */\n\tpublic create( sourceElementOrData: HTMLElement | string, config: EditorConfig ): Promise<unknown> {\n\t\treturn this._contextWatchdog.add( {\n\t\t\tsourceElementOrData,\n\t\t\tconfig,\n\t\t\tcreator: this._creator!,\n\t\t\tid: this._id,\n\t\t\ttype: 'editor'\n\t\t} );\n\t}\n\n\t/**\n\t * Creates a listener that is attached to context watchdog's item and run when the context watchdog fires.\n\t * Currently works only for the `error` event.\n\t */\n\tpublic on( _: string, callback: ( _: null, data: { error: Error; causesRestart?: boolean } ) => void ): void {\n\t\t// Assume that the event name was error.\n\t\tthis._contextWatchdog.on( 'itemError', ( _, { itemId, error } ) => {\n\t\t\tif ( itemId === this._id ) {\n\t\t\t\tcallback( null, { error, causesRestart: undefined } );\n\t\t\t}\n\t\t} );\n\t}\n\n\tpublic destroy(): Promise<unknown> {\n\t\t// Destroying an editor instance after destroying the Context is handled in the `ContextWatchdog` class.\n\t\t// As `EditorWatchdogAdapter` is an adapter, we should not destroy the editor manually.\n\t\t// Otherwise, it causes that the editor is destroyed twice. However, there is a case, when the editor\n\t\t// needs to be removed from the context, without destroying the context itself. We may assume the following\n\t\t// relations with `ContextWatchdog#state`:\n\t\t//\n\t\t// a) `ContextWatchdog#state` === 'ready' - context is not destroyed; it's safe to destroy the editor manually.\n\t\t// b) `ContextWatchdog#state` === 'destroyed' - context is destroyed; let `ContextWatchdog` handle the whole process.\n\t\t//\n\t\t// See #354 for more information.\n\t\tif ( this._contextWatchdog.state === 'ready' ) {\n\t\t\treturn this._contextWatchdog.remove( this._id );\n\t\t}\n\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * An editor instance.\n\t */\n\tpublic get editor(): TEditor {\n\t\treturn this._contextWatchdog.getItem( this._id ) as TEditor;\n\t}\n}\n", "/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\nimport React, { useState, useEffect, useRef, type Dispatch, type SetStateAction, useContext, useCallback } from 'react';\n\nimport type { EditorConfig } from '@ckeditor/ckeditor5-core';\nimport type { DocumentChangeEvent, Writer, RootElement } from '@ckeditor/ckeditor5-engine';\n\nimport { ContextWatchdog, EditorWatchdog } from '@ckeditor/ckeditor5-watchdog';\nimport type { WatchdogConfig } from '@ckeditor/ckeditor5-watchdog/src/watchdog';\n\nimport type { AddRootEvent, DetachRootEvent } from '@ckeditor/ckeditor5-editor-multi-root/src/multirooteditor';\nimport type MultiRootEditor from '@ckeditor/ckeditor5-build-multi-root';\nimport type EventInfo from '@ckeditor/ckeditor5-utils/src/eventinfo';\n\nimport { ContextWatchdogContext } from './ckeditorcontext';\nimport { EditorWatchdogAdapter } from './ckeditor';\n\nconst REACT_INTEGRATION_READ_ONLY_LOCK_ID = 'Lock from React integration (@ckeditor/ckeditor5-react)';\n\n/* eslint-disable @typescript-eslint/no-use-before-define */\nconst useMultiRootEditor = ( props: MultiRootHookProps ): MultiRootHookReturns => {\n\tconst watchdog = useRef<EditorWatchdog | EditorWatchdogAdapter<MultiRootEditor> | null>( null );\n\n\tconst editorDestructionInProgress = useRef<Promise<void> | null>( null );\n\n\tconst context = useContext( ContextWatchdogContext );\n\n\t// Current editor instance. It may change if the editor is re-initialized by the Watchdog after an error.\n\tconst [ editor, setEditor ] = useState<MultiRootEditor | null>( null );\n\n\t// Current editor data. An object where each key is a root name and the value is the root content.\n\tconst [ data, setData ] = useState<Record<string, string>>( props.data );\n\n\t// Current roots attributes. An object where each key is a root name and the value is an object with root attributes.\n\tconst [ attributes, setAttributes ] = useState<Record<string, Record<string, unknown>>>( props.rootsAttributes || {} );\n\n\t// Contains the JSX elements for each editor root.\n\tconst [ elements, setElements ] = useState<Array<JSX.Element>>( [] );\n\n\tconst shouldUpdateEditor = useRef<boolean>( true );\n\n\tuseEffect( () => {\n\t\tconst initEditor = async () => {\n\t\t\t// When the component has been remounted it is crucial to wait for removing the old editor\n\t\t\t// and cleaning the old state.\n\t\t\tawait editorDestructionInProgress.current;\n\n\t\t\tif ( props.isLayoutReady !== false ) {\n\t\t\t\tawait _initializeEditor();\n\t\t\t}\n\t\t};\n\n\t\tinitEditor();\n\n\t\treturn () => {\n\t\t\t_destroyEditor().then( () => {\n\t\t\t\teditorDestructionInProgress.current = null;\n\t\t\t} );\n\t\t};\n\t}, [ props.isLayoutReady ] );\n\n\tuseEffect( () => {\n\t\tif ( editor ) {\n\t\t\tif ( props.disabled ) {\n\t\t\t\teditor.enableReadOnlyMode( REACT_INTEGRATION_READ_ONLY_LOCK_ID );\n\t\t\t} else {\n\t\t\t\teditor.disableReadOnlyMode( REACT_INTEGRATION_READ_ONLY_LOCK_ID );\n\t\t\t}\n\t\t}\n\t}, [ props.disabled ] );\n\n\tuseEffect( () => {\n\t\t// When the component has been remounted, keeping the old state, it is important to avoid\n\t\t// updating the editor, which will be destroyed by the unmount callback.\n\t\tif ( editor && !editorDestructionInProgress.current ) {\n\t\t\tconst editorData = editor.getFullData();\n\n\t\t\tsetData( { ...editorData } );\n\t\t\tsetAttributes( { ...editor.getRootsAttributes() } );\n\t\t\tsetElements( [\n\t\t\t\t...Object.keys( editorData ).map( rootName => _createEditableElement( editor, rootName ) )\n\t\t\t] );\n\t\t}\n\t}, [ editor && editor.id ] );\n\n\t/**\n\t * Returns the editor configuration.\n\t */\n\tconst _getConfig = (): EditorConfig => {\n\t\tconst config = props.config || {};\n\n\t\tif ( props.data && config.initialData ) {\n\t\t\tconsole.warn(\n\t\t\t\t'Editor data should be provided either using `config.initialData` or `data` property. ' +\n\t\t\t\t'The config value takes precedence over `data` property and will be used when both are specified.'\n\t\t\t);\n\t\t}\n\n\t\treturn {\n\t\t\t...config,\n\t\t\trootsAttributes: attributes\n\t\t};\n\t};\n\n\t/**\n\t * Callback function for handling changed data and attributes in the editor.\n\t */\n\tconst onChangeData = ( editor: MultiRootEditor, event: EventInfo ): void => {\n\t\tconst modelDocument = editor!.model.document;\n\n\t\tif ( !props.disableTwoWayDataBinding ) {\n\t\t\tconst newData: Record<string, string> = {};\n\t\t\tconst newAttributes: Record<string, Record<string, unknown>> = {};\n\n\t\t\tmodelDocument.differ.getChanges()\n\t\t\t\t.forEach( change => {\n\t\t\t\t\tlet root: RootElement;\n\n\t\t\t\t\tif ( change.type == 'insert' || change.type == 'remove' ) {\n\t\t\t\t\t\troot = change.position.root as RootElement;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Must be `attribute` diff item.\n\t\t\t\t\t\troot = change.range.root as RootElement;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Getting data from a not attached root will trigger a warning.\n\t\t\t\t\t// There is another callback for handling detached roots.\n\t\t\t\t\tif ( !root.isAttached() ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst { rootName } = root;\n\n\t\t\t\t\tnewData[ rootName ] = editor!.getData( { rootName } );\n\t\t\t\t} );\n\n\t\t\tmodelDocument.differ.getChangedRoots()\n\t\t\t\t.forEach( changedRoot => {\n\t\t\t\t\t// Ignore added and removed roots. They are handled by a different function.\n\t\t\t\t\t// Only register if roots attributes changed.\n\t\t\t\t\tif ( changedRoot.state ) {\n\t\t\t\t\t\tif ( newData[ changedRoot.name ] !== undefined ) {\n\t\t\t\t\t\t\tdelete newData[ changedRoot.name ];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst rootName = changedRoot.name;\n\n\t\t\t\t\tnewAttributes[ rootName ] = editor!.getRootAttributes( rootName );\n\t\t\t\t} );\n\n\t\t\tif ( Object.keys( newData ).length ) {\n\t\t\t\tsetData( previousData => ( { ...previousData, ...newData } ) );\n\t\t\t}\n\n\t\t\tif ( Object.keys( newAttributes ).length ) {\n\t\t\t\tsetAttributes( previousAttributes => ( { ...previousAttributes, ...newAttributes } ) );\n\t\t\t}\n\t\t}\n\n\t\t/* istanbul ignore else */\n\t\tif ( props.onChange ) {\n\t\t\tprops.onChange( event, editor! );\n\t\t}\n\t};\n\n\t/**\n\t * Callback function for handling an added root.\n\t */\n\tconst onAddRoot = ( editor: MultiRootEditor, evt: EventInfo, root: RootElement ): void => {\n\t\tconst rootName = root.rootName;\n\n\t\tconst reactElement = _createEditableElement( editor, rootName );\n\n\t\tif ( !props.disableTwoWayDataBinding ) {\n\t\t\tsetData( previousData =>\n\t\t\t\t( { ...previousData, [ rootName ]: editor!.getData( { rootName } ) } )\n\t\t\t);\n\n\t\t\tsetAttributes( previousAttributes =>\n\t\t\t\t( { ...previousAttributes, [ rootName ]: editor!.getRootAttributes( rootName ) } )\n\t\t\t);\n\t\t}\n\n\t\tsetElements( previousElements => [ ...previousElements, reactElement ] );\n\t};\n\n\t/**\n\t * Callback function for handling a detached root.\n\t */\n\tconst onDetachRoot = ( editor: MultiRootEditor, evt: EventInfo, root: RootElement ): void => {\n\t\tconst rootName = root.rootName;\n\n\t\tsetElements( previousElements => previousElements.filter( element => element.props.id !== rootName ) );\n\n\t\tif ( !props.disableTwoWayDataBinding ) {\n\t\t\tsetData( previousData => {\n\t\t\t\tconst { [ rootName! ]: _, ...newData } = previousData;\n\n\t\t\t\treturn { ...newData };\n\t\t\t} );\n\n\t\t\tsetAttributes( previousAttributes => {\n\t\t\t\tconst { [ rootName! ]: _, ...newAttributes } = previousAttributes;\n\n\t\t\t\treturn { ...newAttributes };\n\t\t\t} );\n\t\t}\n\n\t\teditor!.detachEditable( root );\n\t};\n\n\t/**\n\t * Creates a React element on which the root editable element is initialized.\n\t */\n\tconst _createEditableElement = ( editor: MultiRootEditor, rootName: string ): JSX.Element => (\n\t\t<div\n\t\t\tid={rootName}\n\t\t\tkey={rootName}\n\t\t\tref={ el => {\n\t\t\t\tif ( el ) {\n\t\t\t\t\tconst editable = editor.ui.view.createEditable( rootName, el );\n\n\t\t\t\t\teditor.ui.addEditable( editable );\n\n\t\t\t\t\teditor.editing.view.forceRender();\n\t\t\t\t}\n\t\t\t}}\n\t\t></div>\n\t);\n\n\t/**\n\t * Creates an editor using initial elements or data, and configuration.\n\t *\n\t * @param initialData The initial data.\n\t * @param config CKEditor 5 editor configuration.\n\t */\n\tconst _createEditor = (\n\t\tinitialData: Record<string, string> | Record<string, HTMLElement>,\n\t\tconfig: EditorConfig\n\t): Promise<MultiRootEditor> => {\n\t\treturn props.editor.create( initialData, config )\n\t\t\t.then( ( editor: MultiRootEditor ) => {\n\t\t\t\tif ( props.disabled ) {\n\t\t\t\t\t// Switch to the read-only mode if the `[disabled]` attribute is specified.\n\t\t\t\t\t/* istanbul ignore else */\n\t\t\t\t\tif ( props.disabled ) {\n\t\t\t\t\t\teditor.enableReadOnlyMode( REACT_INTEGRATION_READ_ONLY_LOCK_ID );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst modelDocument = editor.model.document;\n\t\t\t\tconst viewDocument = editor.editing.view.document;\n\n\t\t\t\tmodelDocument.on<DocumentChangeEvent>( 'change:data', evt => onChangeData( editor, evt ) );\n\n\t\t\t\teditor.on<AddRootEvent>( 'addRoot', ( evt, root ) => onAddRoot( editor, evt, root ) );\n\t\t\t\teditor.on<DetachRootEvent>( 'detachRoot', ( evt, root ) => onDetachRoot( editor, evt, root ) );\n\n\t\t\t\tviewDocument.on( 'focus', event => {\n\t\t\t\t\t/* istanbul ignore else */\n\t\t\t\t\tif ( props.onFocus ) {\n\t\t\t\t\t\tprops.onFocus( event, editor );\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\t\tviewDocument.on( 'blur', event => {\n\t\t\t\t\t/* istanbul ignore else */\n\t\t\t\t\tif ( props.onBlur ) {\n\t\t\t\t\t\tprops.onBlur( event, editor );\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\t\tsetEditor( editor );\n\n\t\t\t\tif ( props.onReady ) {\n\t\t\t\t\tprops.onReady( editor );\n\t\t\t\t}\n\n\t\t\t\treturn editor;\n\t\t\t} );\n\t};\n\n\t/**\n\t * Destroys the editor by destroying the watchdog.\n\t */\n\tconst _destroyEditor = async (): Promise<void> => {\n\t\tsetEditor( null );\n\t\tsetData( {} );\n\t\tsetAttributes( {} );\n\t\tsetElements( [] );\n\n\t\teditorDestructionInProgress.current = new Promise<void>( resolve => {\n\t\t\t// It may happen during the tests that the watchdog instance is not assigned before destroying itself. See: #197.\n\t\t\t//\n\t\t\t// Additionally, we need to find a way to detect if the whole context has been destroyed. As `componentWillUnmount()`\n\t\t\t// could be fired by <CKEditorContext /> and <CKEditor /> at the same time, this `setTimeout()` makes sure\n\t\t\t// that <CKEditorContext /> component will be destroyed first, so during the code execution\n\t\t\t// the `ContextWatchdog#state` would have a correct value. See `EditorWatchdogAdapter#destroy()` for more information.\n\t\t\t/* istanbul ignore next */\n\t\t\tsetTimeout( async () => {\n\t\t\t\tif ( watchdog.current ) {\n\t\t\t\t\tawait watchdog.current.destroy();\n\t\t\t\t\twatchdog.current = null;\n\n\t\t\t\t\treturn resolve();\n\t\t\t\t}\n\n\t\t\t\tif ( editor ) {\n\t\t\t\t\tawait editor.destroy();\n\n\t\t\t\t\treturn resolve();\n\t\t\t\t}\n\n\t\t\t\tresolve();\n\t\t\t} );\n\t\t} );\n\t};\n\n\t/**\n\t * Initializes the editor by creating a proper watchdog and initializing it with the editor's configuration.\n\t */\n\tconst _initializeEditor = async (): Promise<void> => {\n\t\tif ( props.disableWatchdog ) {\n\t\t\tawait _createEditor( props.data, _getConfig() );\n\n\t\t\treturn;\n\t\t}\n\n\t\t/* istanbul ignore next */\n\t\tif ( watchdog.current ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( context instanceof ContextWatchdog ) {\n\t\t\twatchdog.current = new EditorWatchdogAdapter( context );\n\t\t} else {\n\t\t\twatchdog.current = new EditorWatchdog( props.editor, props.watchdogConfig );\n\t\t}\n\n\t\tconst watchdogInstance = watchdog.current;\n\n\t\twatchdogInstance.setCreator( ( data, config ) => _createEditor( data as Record<string, string>, config ) );\n\n\t\twatchdogInstance.on( 'error', ( _, { error, causesRestart } ) => {\n\t\t\tconst onError = props.onError || console.error;\n\n\t\t\tonError( error, { phase: 'runtime', willEditorRestart: causesRestart } );\n\t\t} );\n\n\t\tawait watchdogInstance\n\t\t\t.create( data as any, _getConfig() )\n\t\t\t.catch( error => {\n\t\t\t\tconst onError = props.onError || console.error;\n\n\t\t\t\tonError( error, { phase: 'initialization', willEditorRestart: false } );\n\t\t\t} );\n\t};\n\n\tuseEffect( () => {\n\t\tif ( !editor ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Editor should be only updated when the changes come from the integrator React application.\n\t\tif ( shouldUpdateEditor.current ) {\n\t\t\tshouldUpdateEditor.current = false;\n\n\t\t\tconst dataKeys = Object.keys( data );\n\t\t\tconst attributesKeys = Object.keys( attributes );\n\n\t\t\t// Check if `data` and `attributes` have the same keys.\n\t\t\t//\n\t\t\t// It prevents the addition of attributes for non-existing roots.\n\t\t\t// If the `data` object has a different set of keys, an error will not be thrown\n\t\t\t// since the attributes will be removed/added during root initialization/destruction.\n\t\t\tif ( !dataKeys.every( key => attributesKeys.includes( key ) ) ) {\n\t\t\t\tthrow new Error( '`data` and `attributes` objects must have the same keys (roots).' );\n\t\t\t}\n\n\t\t\tconst editorData = editor.getFullData();\n\t\t\tconst editorAttributes = editor.getRootsAttributes();\n\n\t\t\tconst {\n\t\t\t\taddedKeys: newRoots,\n\t\t\t\tremovedKeys: removedRoots\n\t\t\t} = _getStateDiff( editorData, data || {} );\n\n\t\t\tconst hasModifiedData = dataKeys.some( rootName =>\n\t\t\t\teditorData[ rootName ] !== undefined &&\n\t\t\t\tJSON.stringify( editorData[ rootName ] ) !== JSON.stringify( data[ rootName ] )\n\t\t\t);\n\n\t\t\tconst rootsWithChangedAttributes = attributesKeys.filter( rootName =>\n\t\t\t\tJSON.stringify( editorAttributes[ rootName ] ) !== JSON.stringify( attributes[ rootName ] ) );\n\n\t\t\teditor.model.change( writer => {\n\t\t\t\t_handleNewRoots( newRoots );\n\t\t\t\t_handleRemovedRoots( removedRoots );\n\n\t\t\t\tif ( hasModifiedData ) {\n\t\t\t\t\t_updateEditorData();\n\t\t\t\t}\n\n\t\t\t\tif ( rootsWithChangedAttributes.length ) {\n\t\t\t\t\t_updateEditorAttributes( writer, rootsWithChangedAttributes );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t}, [ data, attributes ] );\n\n\tconst _getStateDiff = (\n\t\tpreviousState: Record<string, unknown>,\n\t\tnewState: Record<string, unknown>\n\t): {\n\t\taddedKeys: Array<string>;\n\t\tremovedKeys: Array<string>;\n\t} => {\n\t\tconst previousStateKeys = Object.keys( previousState );\n\t\tconst newStateKeys = Object.keys( newState );\n\n\t\treturn {\n\t\t\taddedKeys: newStateKeys.filter( key => !previousStateKeys.includes( key ) ),\n\t\t\tremovedKeys: previousStateKeys.filter( key => !newStateKeys.includes( key ) )\n\t\t};\n\t};\n\n\tconst _handleNewRoots = ( roots: Array<string> ) => {\n\t\troots.forEach( rootName => {\n\t\t\teditor!.addRoot( rootName, {\n\t\t\t\tdata: data[ rootName ] || '',\n\t\t\t\tattributes: attributes?.[ rootName ] || {},\n\t\t\t\tisUndoable: true\n\t\t\t} );\n\t\t} );\n\t};\n\n\tconst _handleRemovedRoots = ( roots: Array<string> ) => {\n\t\troots.forEach( rootName => {\n\t\t\teditor!.detachRoot( rootName, true );\n\t\t} );\n\t};\n\n\tconst _updateEditorData = () => {\n\t\t// If any of the roots content has changed, set the editor data.\n\t\t// Unfortunately, we cannot set the editor data just for one root, so we need to overwrite all roots (`nextProps.data` is an\n\t\t// object with data for each root).\n\t\teditor!.data.set( data, { suppressErrorInCollaboration: true } as any );\n\t};\n\n\tconst _updateEditorAttributes = ( writer: Writer, roots: Array<string> ) => {\n\t\troots.forEach( rootName => {\n\t\t\tObject.keys( attributes![ rootName ] ).forEach( attr => {\n\t\t\t\teditor!.registerRootAttribute( attr );\n\t\t\t} );\n\n\t\t\twriter.clearAttributes( editor!.model.document.getRoot( rootName )! );\n\t\t\twriter.setAttributes( attributes![ rootName ], editor!.model.document.getRoot( rootName )! );\n\t\t} );\n\t};\n\n\tconst _externalSetData: Dispatch<SetStateAction<Record<string, string>>> = useCallback(\n\t\tnewData => {\n\t\t\tshouldUpdateEditor.current = true;\n\t\t\tsetData( newData );\n\t\t},\n\t\t[ setData ]\n\t);\n\n\tconst _externalSetAttributes: Dispatch<SetStateAction<Record<string, Record<string, unknown>>>> = useCallback(\n\t\tnewAttributes => {\n\t\t\tshouldUpdateEditor.current = true;\n\t\t\tsetAttributes( newAttributes );\n\t\t},\n\t\t[ setAttributes ]\n\t);\n\n\treturn {\n\t\teditor, editableElements: elements, toolbarElement: <EditorToolbarWrapper editor={editor} />,\n\t\tdata, setData: _externalSetData,\n\t\tattributes, setAttributes: _externalSetAttributes\n\t};\n};\n\nconst EditorToolbarWrapper = ( { editor }: any ) => {\n\tconst toolbarRef = useRef<HTMLDivElement>( null );\n\n\tuseEffect( () => {\n\t\tconst toolbarContainer = toolbarRef.current;\n\n\t\tif ( !editor || !toolbarContainer ) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst element = editor.ui.view.toolbar.element!;\n\n\t\tif ( toolbarContainer ) {\n\t\t\ttoolbarContainer.appendChild( element! );\n\t\t}\n\n\t\treturn () => {\n\t\t\tif ( toolbarContainer ) {\n\t\t\t\ttoolbarContainer.removeChild( element! );\n\t\t\t}\n\t\t};\n\t}, [ editor && editor.id ] );\n\n\treturn <div ref={toolbarRef}></div>;\n};\n\nexport default useMultiRootEditor;\n\ninterface ErrorDetails {\n\tphase: 'initialization' | 'runtime';\n\twillEditorRestart?: boolean;\n}\n\nexport type MultiRootHookProps = {\n\tisLayoutReady?: boolean;\n\tdisabled?: boolean;\n\tdata: Record<string, string>;\n\trootsAttributes?: Record<string, Record<string, unknown>>;\n\teditor: typeof MultiRootEditor;\n\twatchdogConfig?: WatchdogConfig;\n\tdisableWatchdog?: boolean;\n\tdisableTwoWayDataBinding?: boolean;\n\n\tonReady?: ( editor: MultiRootEditor ) => void;\n\tonError?: ( error: Error, details: ErrorDetails ) => void;\n\tonChange?: ( event: EventInfo, editor: MultiRootEditor ) => void;\n\tonFocus?: ( event: EventInfo, editor: MultiRootEditor ) => void;\n\tonBlur?: ( event: EventInfo, editor: MultiRootEditor ) => void;\n\n\tconfig?: Record<string, unknown>;\n};\n\nexport type MultiRootHookReturns = {\n\teditor: MultiRootEditor | null;\n\teditableElements: Array<JSX.Element>;\n\ttoolbarElement: JSX.Element;\n\tdata: Record<string, string>;\n\tsetData: Dispatch<SetStateAction<Record<string, string>>>;\n\tattributes: Record<string, Record<string, unknown>>;\n\tsetAttributes: Dispatch<SetStateAction<Record<string, Record<string, unknown>>>>;\n};\n"],
  "mappings": "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",
  "names": ["root", "factory", "exports", "module", "require", "define", "amd", "self", "__WEBPACK_EXTERNAL_MODULE__155__", "__WEBPACK_EXTERNAL_MODULE__949__", "__WEBPACK_EXTERNAL_MODULE__546__", "t", "__webpack_module_cache__", "__webpack_require__", "moduleId", "cachedModule", "__webpack_modules__", "n", "getter", "__esModule", "d", "a", "definition", "key", "o", "Object", "defineProperty", "enumerable", "get", "obj", "prop", "prototype", "hasOwnProperty", "call", "r", "Symbol", "toStringTag", "value", "e", "HEX_NUMBERS", "Array", "fill", "map", "_", "index", "toString", "slice", "ContextWatchdogContext", "CKEditorContext", "props", "context", "super", "contextWatchdog", "this", "isLayoutReady", "_initializeContextWatchdog", "config", "nextProps", "_shouldComponentUpdate", "id", "destroy", "children", "render", "Provider", "componentWillUnmount", "_destroyContext", "ContextWatchdog", "watchdogConfig", "on", "errorEvent", "onError", "error", "phase", "willContextRestart", "causesRestart", "state", "onReady", "create", "catch", "defaultProps", "details", "console", "propTypes", "REACT_INTEGRATION_READ_ONLY_LOCK_ID", "CKEditor", "editorDestructionInProgress", "domContainer", "watchdog", "CKEDITOR_VERSION", "window", "major", "split", "Number", "warn", "editor", "disableWatchdog", "instance", "_shouldUpdateEditor", "data", "set", "disabled", "enableReadOnlyMode", "disableReadOnlyMode", "componentDidMount", "_initializeEditor", "componentDidUpdate", "_destroyEditor", "ref", "_createEditor", "current", "_getConfig", "EditorWatchdogAdapter", "_EditorWatchdog", "setCreator", "el", "willEditorRestart", "element", "then", "modelDocument", "model", "document", "viewDocument", "editing", "view", "event", "onChange", "onFocus", "onBlur", "setTimeout", "Promise", "resolve", "async", "initialData", "contextType", "isRequired", "EditorWatchdog", "_contextWatchdog", "_id", "r1", "Math", "random", "r2", "r3", "r4", "uid", "creator", "_creator", "sourceElementOrData", "add", "type", "callback", "itemId", "undefined", "remove", "getItem", "EditorToolbarWrapper", "toolbarRef", "useRef", "useEffect", "toolbarContainer", "ui", "toolbar", "appendChild", "removeChild", "useContext", "setEditor", "useState", "setData", "attributes", "setAttributes", "rootsAttributes", "elements", "setElements", "shouldUpdateEditor", "initEditor", "editorData", "getFullData", "getRootsAttributes", "keys", "rootName", "_createEditableElement", "editable", "createEditable", "addEditable", "forceRender", "evt", "disableTwoWayDataBinding", "newData", "newAttributes", "differ", "getChanges", "forEach", "change", "position", "range", "isAttached", "getData", "getChangedRoots", "changedRoot", "name", "getRootAttributes", "length", "previousData", "previousAttributes", "reactElement", "previousElements", "filter", "detachEditable", "watchdogInstance", "dataKeys", "attributesKeys", "every", "includes", "Error", "editorAttributes", "addedKeys", "newRoots", "removedKeys", "removedRoots", "_getStateDiff", "hasModifiedData", "some", "JSON", "stringify", "rootsWithChangedAttributes", "writer", "_handleNewRoots", "_handleRemovedRoots", "_updateEditorData", "_updateEditorAttributes", "previousState", "newState", "previousStateKeys", "newStateKeys", "roots", "addRoot", "isUndoable", "detachRoot", "suppressErrorInCollaboration", "attr", "registerRootAttribute", "clearAttributes", "getRoot", "_externalSetData", "useCallback", "_externalSetAttributes", "editableElements", "toolbarElement"]
}
